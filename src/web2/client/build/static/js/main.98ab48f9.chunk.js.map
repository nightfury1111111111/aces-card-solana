{"version":3,"sources":["css/Header.module.css","css/Home.module.css","css/Leaderboard.module.css","css/Dashboard.module.css","api/users.js","components/Header.js","pages/Home/Home.js","api/games.js","pages/Game/Dashboard.js","pages/Game/Leaderboard.js","pages/Game/Profile.js","pages/Game/Game.js","App.js","index.js","css/Profile.module.css","css/Game.module.css"],"names":["module","exports","userLogin","pubkey","a","axios","post","user","headers","res","data","getRecentGames","get","getAvailableCards","gameId","console","log","availableCards","cards","wildCards","Header","props","onProfileClick","buttonWidth","className","styles","HeaderGame","HeaderHome","style","minWidth","ProfileButton","onClick","width","display","require","Home","wallet","useState","isLoggedIn","setIsLoggedIn","useEffect","publicKey","toString","to","Content","Or","href","getGameRankings","entries","playGame","gameType","substring","faceRankings","maxEntries","process","MAX_ENTRIES","Dashboard","rank","setRank","rankings","setRankings","reloadRankings","setReloadRankings","acesCards","setAcesCards","setWildCards","bestHand","setBestHand","setEntries","then","filter","card","image","i","map","entry","indexOf","count","length","playAgainButton","setPlayAgainButton","createEntry","r","hand","DashContainer","Play","handType","toUpperCase","slice","replace","Hand","sort","b","face","src","alt","suit","Replay","Stats","disabled","Cards","CardGrid","Headline","Card","Leaderboard","rankingsToShow","setRankingsToShow","Math","min","concat","match","LeaderboardContainer","Number","BoldRank","Profile","isProfileOpen","setIsProfileOpen","recentGames","setRecentGames","history","ProfileBlock","ProfileNone","ProfileMain","ProfileInner","overflow","textOverflow","maxWidth","games","History","HistoryEntry","String","padStart","ranks","totals","Game","GameArea","Rankings","App","useWallet","path","element","AppWithProvider","network","WalletAdapterNetwork","Mainnet","endpoint","clusterApiUrl","walletOptions","useMemo","getPhantomWallet","getSlopeWallet","getSolflareWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","wallets","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98ab48f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__RWSel\",\"HeaderHome\":\"Header_HeaderHome__4fkBX Header_Header__RWSel\",\"HeaderGame\":\"Header_HeaderGame__20foV Header_Header__RWSel\",\"ProfileButton\":\"Header_ProfileButton__77GX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1aUBM\",\"Content\":\"Home_Content__2ue8L\",\"Or\":\"Home_Or__1IcPt\",\"wallet-adapter-button\":\"Home_wallet-adapter-button__S-GGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeaderboardContainer\":\"Leaderboard_LeaderboardContainer__DjWNe\",\"Leaderboard\":\"Leaderboard_Leaderboard__1JspY\",\"BoldRank\":\"Leaderboard_BoldRank__2L6LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashContainer\":\"Dashboard_DashContainer__G4W5n\",\"Dashboard\":\"Dashboard_Dashboard__1uK3T\",\"Play\":\"Dashboard_Play__1d_2z\",\"Replay\":\"Dashboard_Replay__2R53y\",\"Hand\":\"Dashboard_Hand__17d2t\",\"Cards\":\"Dashboard_Cards__2XYZz\",\"CardGrid\":\"Dashboard_CardGrid__2Vfkb\",\"Headline\":\"Dashboard_Headline__3lSWr\",\"Card\":\"Dashboard_Card__2tCQ2\",\"Stats\":\"Dashboard_Stats__1e_pm\"};","import axios from 'axios';\n\nexport const userLogin = async (pubkey) => {\n    let res = await axios.post(`/users/login`, { user: pubkey }, { headers: { 'Content-Type': 'application/json' } });\n    return res.data;\n}\n\nexport const getRecentGames = async (pubkey) => {\n    let res = await axios.get(`/users/history/${pubkey}`);\n    return res.data;\n}\n\nexport const getGameEntry = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/history/${pubkey}-${gameId}`);\n    return res.data;\n}\n\nexport const getAvailableCards = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/cards/${pubkey}-${gameId}`);\n    console.log(res);\n    return { availableCards: res.data.cards, wildCards: res.data.wildCards };\n}","import React from 'react';\n\nimport styles from '../css/Header.module.css';\n\nconst Header = (props) => {\n    const user = props.user;\n    const onProfileClick = props.onProfileClick;\n    let buttonWidth = \"184px\";\n\n    return (\n        <div className={user ? styles.HeaderGame : styles.HeaderHome}>\n            <div style={ { minWidth: buttonWidth } }>\n                <p>The <b>ACES</b></p>\n            </div>\n            <p>The <b>ACES Contest</b></p>\n            <div style={ { minWidth: buttonWidth } }>\n                <button className={styles.ProfileButton} onClick={onProfileClick} style={ user ? { width: buttonWidth } : { display: \"none\" } }>PROFILE</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { WalletMultiButton, WalletModalProvider } from '@solana/wallet-adapter-react-ui';\n\nimport { userLogin } from '../../api/users';\n\nimport Header from '../../components/Header';\n\nimport styles from '../../css/Home.module.css';\n\n// Wallet Multi-Button styling\nrequire('@solana/wallet-adapter-react-ui/styles.css');\nrequire('../../css/main.css');\n\nconst Home = (props) => {\n    const wallet = props.wallet;\n    \n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    // Go to '/play' when logged in\n    useEffect(() => {\n        if (wallet.publicKey) {\n            userLogin(wallet.publicKey.toString());\n            setIsLoggedIn(true);\n        } \n    \n    }, [wallet]);\n\n    return isLoggedIn ? (\n            <Navigate to=\"/play\"/>\n        ) : (\n        <div className={styles.Home}>\n            <Header user={false} onProfileClick={() => {}}/>\n                <div className={styles.Content}>\n                    <WalletModalProvider>\n                        <WalletMultiButton>PLAY</WalletMultiButton>\n                    </WalletModalProvider>\n                    <div className={styles.Or}>\n                        <div></div><hr/>\n                        <p>Or</p>\n                        <hr/>\n                    </div>\n                    <a href=\"https://www.magiceden.io/marketplace/the_aces_nft\">BUY</a>\n                    <p>In Order to Play the Game You Must Hold At Least 1 Aces NFT</p>\n                    <p>This version is in <b>Beta Mode</b></p>\n                </div>\n        </div>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nexport const getGameRankings = async (gameId) => {\n    let res = await axios.get(`/games/${gameId}`);\n    return res.data.entries;\n}\n\nexport const playGame = async (pubkey, gameId) => {\n    let res = await axios.post(`/games/play/${gameId}`, { gameType: gameId.substring(8), user: pubkey });\n    return res.data;\n}\n","import { useState, useEffect } from 'react';\n\nimport { getAvailableCards } from '../../api/users';\nimport { playGame, getGameRankings } from '../../api/games';\n\nimport styles from '../../css/Dashboard.module.css';\n\nconst faceRankings = [ \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst maxEntries = process.env.MAX_ENTRIES || 15;\n\nconst Dashboard = (props) => {\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const rank = props.rank;\n    const setRank = props.setRank;\n    const rankings = props.rankings;\n    const setRankings = props.setRankings;\n    const reloadRankings = props.reloadRankings;\n    const setReloadRankings = props.setReloadRankings;\n    const [ acesCards, setAcesCards ] = useState([]);\n    const [ wildCards, setWildCards ] = useState([]);\n    const [ bestHand, setBestHand ] = useState();\n    const [ entries, setEntries ] = useState();\n\n    // Get available cards\n    useEffect(() => {\n        getAvailableCards(wallet, gameId).then(cards => {\n            console.log(cards);\n            setAcesCards(cards.availableCards.filter(card => card.image));\n            setWildCards(cards.availableCards.filter(card => !card.image));\n        })\n    }, [wallet, gameId, rankings, setAcesCards, setWildCards]);\n\n    // Get best hand from rankings\n    useEffect(() => {\n        if (rankings) {\n            let i = rankings.map(entry => entry.user).indexOf(wallet);\n            console.log(i);\n            if (i !== -1) setBestHand(rankings[i]);\n\n            // Get num of entries at login\n            let count = 0;\n            for (let i = 0; i < rankings.length; i++) {\n                if (rankings[i].user === wallet) { \n                    count += 1;\n                }\n            }\n            setEntries(count);\n        }\n    }, [wallet, rankings, setEntries]);\n\n    const [ playAgainButton, setPlayAgainButton ] = useState(\"PLAY AGAIN\");\n\n    // Create a game entry request\n    const createEntry = () => {\n        setPlayAgainButton(\"Thinking...\");\n        playGame(wallet, gameId).then(entry => {\n            if (entry && entry !== {}) {\n                if (wallet) {\n                    getGameRankings(gameId).then(entries => {\n                        setRankings(entries);\n                        if (entries) {\n                            let r = entries.map(entry => entry.user).indexOf(wallet);\n                            setRank(r === -1 ? \"?\" : r + 1);\n                            setBestHand(entries[r].hand); \n                        }\n                    })\n                }\n                setReloadRankings(reloadRankings + 1);\n                setPlayAgainButton(\"PLAY AGAIN\");\n            }\n        })\n    };\n\n    return (\n        <div className={styles.DashContainer}>\n            <div className={styles.Dashboard}>\n                <div className={styles.Play}>\n                    {\n                        bestHand ? (\n                            !bestHand.handType ? (\n                                <>\n                                    <p>Need at least 1 Aces NFT to play the card contest.</p>\n                                    <button onClick={() => createEntry()}>PLAY</button>\n                                    <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                                </>\n                            ) : (\n                                <>\n                                    <p>{`${(bestHand.handType[0].toUpperCase() + bestHand.handType.slice(1)).replace(\"-\", \" \")}`}</p>\n                                    <div className={styles.Hand}>\n                                        {\n                                            bestHand.hand\n                                                .sort((a, b) => \n                                                    (faceRankings.indexOf(b.face.length === 1 ? b.face : b.face[0].toUpperCase()) - faceRankings.indexOf(a.face.length === 1 ? a.face : a.face[0].toUpperCase())))\n                                                .map( (card, i) => \n                                                <div key={i} >\n                                                    {\n                                                        card.image ? (\n                                                            <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                                        ) : (\n                                                            <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                                                        )\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <div className={styles.Replay}>\n                                        <div className={styles.Stats}>\n                                            <p><b>Rank: </b>{rankings ? `${rank}/${rankings.length}` : ``}</p>\n                                            <p><b>Entries: </b>{`${entries}/${maxEntries}`}</p>\n                                        </div>\n                                        <button onClick={() => createEntry()} \n                                            disabled={(entries && entries >= maxEntries) || playAgainButton !== \"PLAY AGAIN\" ? true : false}>\n                                                {playAgainButton}\n                                        </button>\n                                    </div>\n                                </>\n                            )\n                        ) : (\n                            <>\n                                <p>Best Hand</p>\n                                <button onClick={() => createEntry()}>PLAY</button>\n                                <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                            </>\n                        )\n                    }\n                </div>\n                <hr/>\n                <div className={styles.Cards}>\n                    <div className={styles.CardGrid}>\n                        <div className={styles.Headline}>\n                            <p>ACES</p>\n                        </div>\n                    {\n                        acesCards\n                            .sort((a, b) => \n                                (faceRankings.indexOf(b.face.length === 1 ? b.face : b.face[0].toUpperCase()) - faceRankings.indexOf(a.face.length === 1 ? a.face : a.face[0].toUpperCase())))\n                            .map( (card, i) => \n                                <div key={i} className={styles.Card}>\n                                    <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                </div>\n                        )\n                    }\n                        <div className={styles.Headline}>\n                            <p>Table Cards</p>\n                        </div>\n                    {\n                        wildCards.map( (card, i) => \n                            <div key={i} className={styles.Card}>\n                                <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                            </div>\n                        )\n                    }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import { useState, useEffect } from 'react';\n\nimport styles from '../../css/Leaderboard.module.css';\n\nconst Leaderboard = (props) => {\n    const rankings = props.rankings;\n    const rank = props.rank;\n    const wallet = props.wallet;\n\n    // Calculate which hands should be shown (edge cases toward front or back of rankings)\n    const [ rankingsToShow, setRankingsToShow ] = useState();\n\n    useEffect(() => {\n        if (rankings) {\n            let res;\n            if (rank <= 5 || rank === \"?\") res = rankings.slice(0,Math.min(10, rankings.length));\n            else if (rank > rankings.length - 5) res = rankings.slice(rankings.length - Math.min(10, rankings.length), rankings.length);\n            else res = rankings.slice(rank - Math.min(5, rankings.length / 2), rank).concat(rankings.slice(rank, rank + Math.min(5, rankings.length / 2)));\n            res = res.map(r => ({ rank: 0, user: r.user }) );\n\n            // Find user's entry and match with rank\n            let match = -1;\n            for (let i = 0; i < res.length; i++) {\n                if (res[i].user === wallet) {\n                    match = i; \n                    break;\n                }\n\n            }\n\n            if (match === -1) setRankingsToShow(rankings.slice(0, Math.min(10, rankings.length)).map((entry, i) => ({rank: i + 1, user: entry.user})));\n            else {\n                for (let i = 0; i < res.length; i++) {\n                    if (match !== i) res[i].rank = rank + i - match;\n                    else res[i].rank = rank;\n                }\n                setRankingsToShow(res);\n            }\n        }\n    }, [rankings, rank, wallet, setRankingsToShow]);\n\n    return (\n        <div className={styles.LeaderboardContainer}>\n            <div className={styles.Leaderboard}>\n                <h1>Leaderboard</h1>\n                <hr/>\n                <ul>\n                    \n                    {\n                        rankingsToShow ? (\n                            rankingsToShow.map( (entry, i) => \n                            <li className={Number(entry.rank) === Number(rank) ? styles.BoldRank : \"\"} key={i} >\n                                {`#${entry.rank}: ` + entry.user}\n                            </li>\n                            )\n                        ) : (\n                            <></>\n                        )\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard;","import { useState, useEffect } from 'react';\n\nimport { getRecentGames } from '../../api/users';\n\nimport styles from '../../css/Profile.module.css';\n\nconst Profile = (props) => {\n    const wallet = props.wallet;\n    const isProfileOpen = props.isProfileOpen;\n    const setIsProfileOpen = props.setIsProfileOpen;\n\n    const [ recentGames, setRecentGames ] = useState();\n\n    useEffect(() => {\n        getRecentGames(wallet).then(history => {\n            setRecentGames(history);\n        })\n    }, [wallet, setRecentGames]);\n\n    return (\n        <div className={isProfileOpen ? styles.ProfileBlock : styles.ProfileNone}>\n            <div className={styles.ProfileMain}>\n                <button onClick={() => setIsProfileOpen(false)}/>\n                <div className={styles.ProfileInner}>\n                    <div>\n                        <p>Wallet ID</p>\n                        <p style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: \"50%\" }}>{wallet}</p>\n                    </div>\n                    <div>\n                        <p>Games played:</p>\n                        <p>{recentGames?.games ? recentGames.games.length : \"0\"}</p>\n                    </div>\n                    <div>\n                        <p>Coin balance:</p>\n                        <p>Coming soon!</p>\n                    </div>\n                    <div>\n                        <p>Contest history:</p>\n                        <div className={styles.History}>\n                        {\n                            recentGames?.games ? (\n                                recentGames.games.slice(0,5).map( (gameId, i) => \n                                    <div key={i} className={styles.HistoryEntry}>\n                                        {`${String(Number(gameId.substring(2,4)) + 1).padStart(2, '0')}/${gameId.substring(0,2)}/${gameId.substring(4,8)} - Rank ${recentGames.ranks[i]}/${recentGames.totals[i]}`}\n                                    </div>\n                                )\n                            ) : (\n                                <p>Play your first game!</p>\n                            )\n                        }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Dashboard from './Dashboard';\nimport Leaderboard from './Leaderboard';\nimport Profile from './Profile';\n\nimport { getGameRankings } from '../../api/games';\n\nimport styles from '../../css/Game.module.css';\n\nconst Game = (props) => {\n    const wallet = props.wallet;\n    const gameType = \"5card\";\n    //const gameId = String(new Date().getDate()).padStart(2,'0') + String(new Date().getMonth()).padStart(2,'0') + String(new Date().getFullYear()) + gameType;\n    const gameId = \"testtest\" + gameType;\n    const [ isProfileOpen, setIsProfileOpen ] = useState(false);\n    const [ rankings, setRankings ] = useState();\n    const [ rank, setRank ] = useState(\"?\");\n    const [ reloadRankings, setReloadRankings ] = useState(0);\n\n    // Get current game rankings and find rank\n    useEffect(() => {\n        if (wallet?.publicKey) {\n            getGameRankings(gameId).then(entries => {\n                setRankings(entries);\n                if (entries) {\n                    let r = entries.map(entry => entry.user).indexOf(wallet.publicKey.toString());\n                    setRank(r === -1 ? \"?\" : r + 1);\n                }\n                else {\n                    setRank(\"?\");\n                }\n            })\n        }\n    }, [wallet, gameId, reloadRankings, setRank, setRankings]);\n\n    return wallet.publicKey ? (\n        <div className={styles.Game}>\n            <p><b>BETA</b></p>\n            <div className={styles.Content}>\n                <div className={styles.GameArea}>\n                    <Header user={true} onProfileClick={() => setIsProfileOpen(true)}/>\n                    <Dashboard \n                        wallet={wallet.publicKey.toString()} \n                        gameId={gameId} \n                        rankings={rankings} \n                        rank={rank} \n                        reloadRankings={reloadRankings}\n                        setRankings={setRankings} \n                        setRank={setRank}\n                        setReloadRankings={setReloadRankings}\n                    />\n                </div>\n                <div className={styles.Rankings}>\n                    <Leaderboard wallet={wallet.publicKey.toString()} rankings={rankings} rank={rank}/>\n                </div>\n            </div>\n            <Profile wallet={wallet.publicKey.toString()} isProfileOpen={isProfileOpen} setIsProfileOpen={setIsProfileOpen}/>\n        </div>\n    ) : (\n        <Navigate to=\"/\"/>\n    )\n    ;\n}\n\nexport default Game;","// React, react-router, and react-bootstrap imports\nimport React, { useMemo } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\n\n// Solana-specific imports\nimport { clusterApiUrl } from '@solana/web3.js';\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\n\n// Pages\nimport Home from './pages/Home/Home';\nimport Game from './pages/Game/Game';\n\nconst App = () => {\n  const wallet = useWallet();\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Home wallet={wallet}/>}/>\n        <Route path=\"/play\" element={<Game wallet={wallet}/>}/>\n      </Routes>\n    </>\n  );\n}\n\nconst AppWithProvider = () => {\n  const network = WalletAdapterNetwork.Mainnet;\n  const endpoint = clusterApiUrl(network);\n\n  const walletOptions = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet(),\n    getTorusWallet({\n      options: { clientId: 'Get a client ID @ https://developer.tor.us' }\n  }),\n    getLedgerWallet(),\n    getSolletWallet({ network }),\n    getSolletExtensionWallet({ network }),\n  ], [network]);\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={walletOptions}>\n          <BrowserRouter>\n            <App/>\n          </BrowserRouter>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n}\n\nexport default AppWithProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport AppWithProvider from './App';\n\nReactDOM.render(\n  <AppWithProvider />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__nD2-Z\",\"ProfileMain\":\"Profile_ProfileMain__18I6y\",\"ProfileInner\":\"Profile_ProfileInner__risdd\",\"ProfileBlock\":\"Profile_ProfileBlock__1_2dO Profile_Profile__nD2-Z\",\"ProfileNone\":\"Profile_ProfileNone__ePzbk Profile_Profile__nD2-Z\",\"History\":\"Profile_History__3oShl\",\"HistoryEntry\":\"Profile_HistoryEntry__3jN5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__1qzE8\",\"Content\":\"Game_Content__2W_3p\",\"GameArea\":\"Game_GameArea__38dyN\",\"Rankings\":\"Game_Rankings__1yrWx\"};"],"sourceRoot":""}