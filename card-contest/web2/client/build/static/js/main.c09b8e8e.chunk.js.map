{"version":3,"sources":["css/Header.module.css","css/Home.module.css","css/Dashboard.module.css","api/games.js","api/users.js","components/Header.js","pages/Home/Home.js","pages/Game/Dashboard.js","pages/Game/Leaderboard.js","pages/Game/Profile.js","pages/Game/Rules.js","pages/Game/Game.js","App.js","index.js","css/Profile.module.css","css/Leaderboard.module.css","css/Rules.module.css","css/Game.module.css"],"names":["module","exports","getGameRankings","gameId","a","axios","get","res","data","entries","playGame","pubkey","post","gameType","substring","user","userLogin","headers","getRecentGames","Header","props","onProfileClick","buttonWidth","className","styles","HeaderGame","HeaderHome","style","minWidth","ProfileButton","onClick","width","display","require","Home","wallet","useState","isLoggedIn","setIsLoggedIn","useEffect","publicKey","toString","to","Content","Or","href","faceRankings","Dashboard","maxEntries","rank","setRank","rankings","setRankings","reloadRankings","setReloadRankings","acesCards","setAcesCards","wildCards","setWildCards","bestHand","setBestHand","setEntries","aces","i","map","entry","indexOf","count","length","playAgainButton","setPlayAgainButton","createEntry","then","r","e","DashContainer","Play","handType","toUpperCase","slice","replace","Hand","hand","sort","b","face","card","image","src","alt","suit","Replay","Stats","disabled","Cards","CardGrid","Headline","Card","Leaderboard","setIsRulesOpen","rankingsToShow","setRankingsToShow","Math","min","concat","match","LeaderboardContainer","Number","BoldRank","RulesButton","Profile","isProfileOpen","setIsProfileOpen","recentGames","setRecentGames","history","ProfileBlock","ProfileNone","ProfileMain","ProfileInner","overflow","textOverflow","maxWidth","games","History","HistoryEntry","String","padStart","ranks","totals","Rules","isRulesOpen","RulesBlock","RulesNone","RulesMain","RulesInner","Game","GameArea","Rankings","App","useWallet","now","Date","utc","getTime","getTimezoneOffset","getDate","getMonth","getFullYear","path","element","AppWithProvider","network","WalletAdapterNetwork","Mainnet","endpoint","clusterApiUrl","walletOptions","useMemo","getPhantomWallet","getSlopeWallet","getSolflareWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","wallets","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c09b8e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__RWSel\",\"HeaderHome\":\"Header_HeaderHome__4fkBX Header_Header__RWSel\",\"HeaderGame\":\"Header_HeaderGame__20foV Header_Header__RWSel\",\"ProfileButton\":\"Header_ProfileButton__77GX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1aUBM\",\"Content\":\"Home_Content__2ue8L\",\"Or\":\"Home_Or__1IcPt\",\"wallet-adapter-button\":\"Home_wallet-adapter-button__S-GGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashContainer\":\"Dashboard_DashContainer__G4W5n\",\"Dashboard\":\"Dashboard_Dashboard__1uK3T\",\"Play\":\"Dashboard_Play__1d_2z\",\"Replay\":\"Dashboard_Replay__2R53y\",\"Hand\":\"Dashboard_Hand__17d2t\",\"Cards\":\"Dashboard_Cards__2XYZz\",\"CardGrid\":\"Dashboard_CardGrid__2Vfkb\",\"Headline\":\"Dashboard_Headline__3lSWr\",\"Card\":\"Dashboard_Card__2tCQ2\",\"Stats\":\"Dashboard_Stats__1e_pm\",\"RulesButton\":\"Dashboard_RulesButton__1Da-z\",\"Footer\":\"Dashboard_Footer__CVF82\"};","import axios from 'axios';\n\nexport const getGameRankings = async (gameId) => {\n    let res = await axios.get(`/games/${gameId}`);\n    return res.data.entries;\n}\n\nexport const playGame = async (pubkey, gameId) => {\n    let res = await axios.post(`/games/play/${gameId}`, { gameType: gameId.substring(8), user: pubkey });\n    return res.data;\n}\n","import axios from 'axios';\n\nexport const userLogin = async (pubkey) => {\n    let res = await axios.post(`/users/login`, { user: pubkey }, { headers: { 'Content-Type': 'application/json' } });\n    return res.data;\n}\n\nexport const getRecentGames = async (pubkey) => {\n    let res = await axios.get(`/users/history/${pubkey}`);\n    return res.data;\n}\n\nexport const getGameEntry = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/history/${pubkey}-${gameId}`);\n    return res.data;\n}\n\nexport const getAvailableCards = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/cards/${pubkey}-${gameId}`);\n    return { availableCards: res.data.cards };\n}","import React from 'react';\n\nimport styles from '../css/Header.module.css';\n\nconst Header = (props) => {\n    const user = props.user;\n    const onProfileClick = props.onProfileClick;\n    let buttonWidth = \"184px\";\n\n    return (\n        <div className={user ? styles.HeaderGame : styles.HeaderHome}>\n            <div style={ { minWidth: buttonWidth } }>\n                <p>The <b>ACES</b></p>\n            </div>\n            <p>The <b>ACES Contest</b></p>\n            <div style={ { minWidth: buttonWidth } }>\n                <button className={styles.ProfileButton} onClick={onProfileClick} style={ user ? { width: buttonWidth } : { display: \"none\" } }>PROFILE</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { WalletMultiButton, WalletModalProvider } from '@solana/wallet-adapter-react-ui';\n\nimport { userLogin } from '../../api/users';\n\nimport Header from '../../components/Header';\n\nimport styles from '../../css/Home.module.css';\n\n// Wallet Multi-Button styling\nrequire('@solana/wallet-adapter-react-ui/styles.css');\nrequire('../../css/main.css');\n\nconst Home = (props) => {\n    const wallet = props.wallet;\n    \n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    // Go to '/play' when logged in\n    useEffect(() => {\n        if (wallet.publicKey) {\n            userLogin(wallet.publicKey.toString());\n            setIsLoggedIn(true);\n        } \n    \n    }, [wallet]);\n\n    return isLoggedIn ? (\n            <Navigate to=\"/play\"/>\n        ) : (\n        <div className={styles.Home}>\n            <Header user={false} onProfileClick={() => {}}/>\n                <div className={styles.Content}>\n                    <WalletModalProvider>\n                        <WalletMultiButton>PLAY</WalletMultiButton>\n                    </WalletModalProvider>\n                    <div className={styles.Or}>\n                        <div></div><hr/>\n                        <p>Or</p>\n                        <hr/>\n                    </div>\n                    <a href=\"https://www.magiceden.io/marketplace/the_aces_nft\">BUY</a>\n                    <p>In Order to Play the Game You Must Hold At Least 1 Aces NFT</p>\n                    <p>This version is in <b>Beta Mode</b></p>\n                </div>\n        </div>\n    )\n}\n\nexport default Home;","import { useState, useEffect } from 'react';\n\nimport { playGame, getGameRankings } from '../../api/games';\n\nimport styles from '../../css/Dashboard.module.css';\n\nconst faceRankings = [ \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n\nconst Dashboard = (props) => {\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const rank = props.rank;\n    const setRank = props.setRank;\n    const rankings = props.rankings;\n    const setRankings = props.setRankings;\n    const reloadRankings = props.reloadRankings;\n    const setReloadRankings = props.setReloadRankings;\n    const [ acesCards, setAcesCards ] = useState([]);\n    const [ wildCards, setWildCards ] = useState([]);\n    const [ bestHand, setBestHand ] = useState();\n\n    let maxEntries;\n    if (gameId.substring(0,2) === \"30\") maxEntries = 15; // Roll over day from deuces to 4's\n    else maxEntries = 20;\n    const [ entries, setEntries ] = useState(maxEntries);\n\n    // Get available cards\n    useEffect(() => {\n        if (bestHand && reloadRankings === 0) {\n            setAcesCards(bestHand.aces ? bestHand.aces : []);\n            setWildCards(bestHand.wildCards);\n        }\n\n    }, [wallet, gameId, bestHand, reloadRankings, setAcesCards, setWildCards]);\n\n    // Get best hand from rankings\n    useEffect(() => {\n        if (rankings) {\n            let i = rankings.map(entry => entry.user).indexOf(wallet);\n            if (i !== -1) setBestHand(rankings[i]);\n\n            // Get num of entries at login\n            let count = 0;\n            for (let i = 0; i < rankings.length; i++) {\n                if (rankings[i].user === wallet) { \n                    count += 1;\n                }\n            }\n            setEntries(count);\n        }\n\n    }, [wallet, rankings, setEntries]);\n\n    const [ playAgainButton, setPlayAgainButton ] = useState(\"PLAY AGAIN\");\n\n    // Create a game entry request\n    const createEntry = () => {\n        setPlayAgainButton(\"Thinking...\");\n        playGame(wallet, gameId).then(entry => {\n            if (entry && entry !== {}) {\n                setAcesCards(entry.aces);\n                setWildCards(entry.wildCards);\n                if (wallet) {\n                    getGameRankings(gameId).then(entries => {\n                        setRankings(entries);\n                        if (entries) {\n                            let r = entries.map(e => e.user).indexOf(wallet);\n                            setRank(r === -1 ? \"?\" : r + 1);\n                            if (r !== -1) setBestHand(entries[r]); \n                        }\n                    })\n                }\n                setReloadRankings(reloadRankings + 1);\n                setPlayAgainButton(\"PLAY AGAIN\");\n            }\n        })\n    };\n\n    return (\n        <div className={styles.DashContainer}>\n            <div className={styles.Dashboard}>\n                <div className={styles.Play}>\n                    {\n                        bestHand ? (\n                            !bestHand.handType ? (\n                                <>\n                                    <p>Need at least 1 Aces NFT to play the card contest.</p>\n                                    <button onClick={() => createEntry()} disabled={rankings === false}>PLAY</button>\n                                    <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                                </>\n                            ) : (\n                                <>\n                                    <p>{`${(bestHand.handType[0].toUpperCase() + bestHand.handType.slice(1)).replace(\"-\", \" \")}`}</p>\n                                    <div className={styles.Hand}>\n                                        {\n                                            bestHand.hand\n                                                .sort((a, b) => \n                                                    (faceRankings.indexOf(b.face.length === 1 ? b.face : b.face[0].toUpperCase()) - faceRankings.indexOf(a.face.length === 1 ? a.face : a.face[0].toUpperCase())))\n                                                .map( (card, i) => \n                                                <div key={i} >\n                                                    {\n                                                        card.image ? (\n                                                            <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                                        ) : (\n                                                            <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                                                        )\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <div className={styles.Replay}>\n                                        <div className={styles.Stats}>\n                                            <p><b>Rank: </b>{rankings ? `${rank}/${rankings.length}` : ``}</p>\n                                            <p><b>Entries: </b>{`${entries}/${maxEntries}`}</p>\n                                        </div>\n                                        <button onClick={() => createEntry()} \n                                            disabled={(entries && entries >= maxEntries) || playAgainButton !== \"PLAY AGAIN\" || acesCards.length === 0 ? true : false}>\n                                                {playAgainButton}\n                                        </button>\n                                    </div>\n                                </>\n                            )\n                        ) : (\n                            <>\n                                <p>Best Hand</p>\n                                <button onClick={() => createEntry()}>PLAY</button>\n                                <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                            </>\n                        )\n                    }\n                </div>\n                <hr/>\n                <div className={styles.Cards}>\n                    <div className={styles.CardGrid}>\n                        <div className={styles.Headline}>\n                            <p>Table Cards</p>\n                        </div>\n                    {\n                        wildCards.map( (card, i) => \n                            <div key={i} className={styles.Card}>\n                                <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                            </div>\n                        )\n                    }\n                        <div className={styles.Headline}>\n                            <p>ACES</p>\n                        </div>\n                    {\n                        (acesCards && acesCards.length > 0) ? (acesCards\n                            .map( (card, i) => \n                                <div key={i} className={styles.Card}>\n                                    <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                </div>\n                        )) : (\n                            <></>\n                            )\n                    }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import { useState, useEffect } from 'react';\n\nimport styles from '../../css/Leaderboard.module.css';\n\nconst Leaderboard = (props) => {\n    const rankings = props.rankings;\n    const rank = props.rank;\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const setIsRulesOpen = props.setIsRulesOpen;\n\n    let gameType;\n    if (gameId.substring(8) === \"deuceswild\") gameType = \"Deuces Wild\";\n    else if (gameId.substring(8) === \"4swild\") gameType = \"4's Wild\";\n    else gameType = \"Five Card Poker\";\n\n    // Calculate which hands should be shown (edge cases toward front or back of rankings)\n    const [ rankingsToShow, setRankingsToShow ] = useState();\n\n    useEffect(() => {\n        if (rankings) {\n            let res;\n            if (rank <= 5 || rank === \"?\") res = rankings.slice(0,Math.min(10, rankings.length));\n            else if (rank > rankings.length - 5) res = rankings.slice(rankings.length - Math.min(10, rankings.length), rankings.length);\n            else res = rankings.slice(rank - Math.min(5, rankings.length / 2), rank).concat(rankings.slice(rank, rank + Math.min(5, rankings.length / 2)));\n            res = res.map(r => ({ rank: 0, user: r.user }) );\n\n            // Find user's entry and match with rank\n            let match = -1;\n            for (let i = 0; i < res.length; i++) {\n                if (res[i].user === wallet) {\n                    match = i; \n                    break;\n                }\n\n            }\n\n            if (match === -1) setRankingsToShow(rankings.slice(0, Math.min(10, rankings.length)).map((entry, i) => ({rank: i + 1, user: entry.user})));\n            else {\n                for (let i = 0; i < res.length; i++) {\n                    if (match !== i) res[i].rank = rank + i - match;\n                    else res[i].rank = rank;\n                }\n                setRankingsToShow(res);\n            }\n        }\n    }, [rankings, rank, wallet, setRankingsToShow]);\n\n    return (\n        <div className={styles.LeaderboardContainer}>\n            <div className={styles.Leaderboard}>\n                <h1>Leaderboard: {gameType}</h1>\n                <hr/>\n                <ul>\n                    \n                    {\n                        rankingsToShow ? (\n                            rankingsToShow.map( (entry, i) => \n                            <li className={Number(entry.rank) === Number(rank) ? styles.BoldRank : \"\"} key={i} >\n                                {`#${entry.rank}: ` + entry.user}\n                            </li>\n                            )\n                        ) : (\n                            <></>\n                        )\n                    }\n                </ul>\n            </div>\n            <button className={styles.RulesButton} onClick={() => setIsRulesOpen(true)}>RULES</button>\n        </div>\n    )\n}\n\nexport default Leaderboard;","import { useState, useEffect } from 'react';\n\nimport { getRecentGames } from '../../api/users';\n\nimport styles from '../../css/Profile.module.css';\n\nconst Profile = (props) => {\n    const wallet = props.wallet;\n    const isProfileOpen = props.isProfileOpen;\n    const setIsProfileOpen = props.setIsProfileOpen;\n\n    const [ recentGames, setRecentGames ] = useState();\n\n    useEffect(() => {\n        getRecentGames(wallet).then(history => {\n            setRecentGames(history);\n        })\n    }, [wallet, setRecentGames]);\n\n    return (\n        <div className={isProfileOpen ? styles.ProfileBlock : styles.ProfileNone}>\n            <div className={styles.ProfileMain}>\n                <button onClick={() => setIsProfileOpen(false)}/>\n                <div className={styles.ProfileInner}>\n                    <div>\n                        <p>Wallet ID</p>\n                        <p style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: \"50%\" }}>{wallet}</p>\n                    </div>\n                    <div>\n                        <p>Games played:</p>\n                        <p>{recentGames?.games ? recentGames.games.length : \"0\"}</p>\n                    </div>\n                    <div>\n                        <p>Coin balance:</p>\n                        <p>Coming soon!</p>\n                    </div>\n                    <div>\n                        <p>Contest history:</p>\n                        <div className={styles.History}>\n                        {\n                            recentGames?.games ? (\n                                recentGames.games.slice(0,5).map( (gameId, i) => \n                                    gameId.substring(0,8) !== \"testtest\" ? (\n                                        <div key={i} className={styles.HistoryEntry}>\n                                            {`${gameId.substring(8) === \"deuceswild\" ? \"2's Wild \" \n                                                : (gameId.substring(8) === \"4swild\" ? \"4's wild\" : \"5 Card \")}\n                                                ${String(Number(gameId.substring(2,4)) + 1).padStart(2, '0')}/${gameId.substring(0,2)} - \n                                                Rank ${recentGames.ranks[i]}/${recentGames.totals[i]}`}\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )\n                                )\n                            ) : (\n                                <p>Play your first game!</p>\n                            )\n                        }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import styles from '../../css/Rules.module.css';\n\nconst Rules = (props) => {\n    const isRulesOpen = props.isRulesOpen;\n    const setIsRulesOpen = props.setIsRulesOpen;\n\n    return (\n        <div className={isRulesOpen ? styles.RulesBlock : styles.RulesNone}>\n            <div className={styles.RulesMain}>\n                <button onClick={() => setIsRulesOpen(false)}/>\n                <div className={styles.RulesInner}>\n                    <ul>\n                        <li>\n                            The Aces Card Contest runs every day from 12AM-11:59PM UTC.\n                        </li>\n                        <li>\n                            You get up to 20 entries per day, with each entry providing you with 4 new \"Table Cards.\"\n                        </li>\n                        <li>\n                            Each entry, you will get up to 10 of your Aces NFTs randomly drawn from your deck alone with those\n                            4 Table Cards to make your best hand.\n                        </li>\n                        <li>\n                            After you enter, your entry's respective Aces and Table Cards will appear on the bottom of the screen. \n                            The top shows your best entry from the current contest.\n                        </li>\n                        <li>\n                            Currently, the contest is \"Best 5 Card Poker Hand.\" This game has variants such as 2's Wild and 4's Wild, which\n                            provides players with another wild card (on top of the Joker) to increase their chances of drawing low probability hands.        \n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Rules;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Dashboard from './Dashboard';\nimport Leaderboard from './Leaderboard';\nimport Profile from './Profile';\nimport Rules from './Rules';\n\nimport styles from '../../css/Game.module.css';\n\nconst Game = (props) => {\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const rankings = props.rankings;\n    const setRankings = props.setRankings;\n    const reloadRankings = props.reloadRankings;\n    const setReloadRankings = props.setReloadRankings;\n\n    const [ isProfileOpen, setIsProfileOpen ] = useState(false);\n    const [ isRulesOpen, setIsRulesOpen ] = useState(false);\n    const [ rank, setRank ] = useState(\"?\");\n\n    // Get current game rankings and find rank\n    useEffect(() => {\n        if (wallet?.publicKey) {\n            if (rankings) {\n                let r = rankings.map(entry => entry.user).indexOf(wallet.publicKey.toString());\n                setRank(r === -1 ? \"?\" : r + 1);\n            }\n            else {\n                setRank(\"?\");\n            }\n        }\n    }, [wallet, gameId, rankings, setRank]);\n\n    return wallet.publicKey ? (\n        <div className={styles.Game}>\n            <p><b>BETA</b></p>\n            <div className={styles.Content}>\n                <div className={styles.GameArea}>\n                    <Header user={true} onProfileClick={() => setIsProfileOpen(true)}/>\n                    <Dashboard \n                        wallet={wallet.publicKey.toString()} \n                        gameId={gameId} \n                        rankings={rankings} \n                        rank={rank} \n                        reloadRankings={reloadRankings}\n                        setRankings={setRankings} \n                        setRank={setRank}\n                        setReloadRankings={setReloadRankings}\n                    />\n                </div>\n                <div className={styles.Rankings}>\n                    <Leaderboard wallet={wallet.publicKey.toString()} gameId={gameId} rankings={rankings} rank={rank} setIsRulesOpen={setIsRulesOpen}/>\n                </div>\n            </div>\n            <Profile wallet={wallet.publicKey.toString()} isProfileOpen={isProfileOpen} setIsProfileOpen={setIsProfileOpen}/>\n            <Rules isRulesOpen={isRulesOpen} setIsRulesOpen={setIsRulesOpen}/>\n        </div>\n    ) : (\n        <Navigate to=\"/\"/>\n    )\n    ;\n}\n\nexport default Game;","// React, react-router, and react-bootstrap imports\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\n\n// Solana-specific imports\nimport { clusterApiUrl } from '@solana/web3.js';\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\n\nimport { getGameRankings } from './api/games';\n\n// Pages\nimport Home from './pages/Home/Home';\nimport Game from './pages/Game/Game';\n\nconst App = () => {\n  const wallet = useWallet();\n\n  const now = new Date();\n  const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000);\n\n  let gameType;\n  if ([ \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\" ].indexOf(String(utc.getDate()).padStart(2, '0')) !== -1) gameType = \"deuceswild\";\n  else if ([ \"31\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\" ].indexOf(String(utc.getDate()).padStart(2, '0')) !== -1) gameType = \"4swild\";\n  else gameType = \"5card\";\n\n  //const gameType = \"deuceswild\";\n  const gameId = String(utc.getDate()).padStart(2,'0') + String(utc.getMonth()).padStart(2,'0') + String(utc.getFullYear()) + gameType;\n  //const gameId = \"thisisit\" + gameType;\n\n  const [ rankings, setRankings ] = useState(false);\n  const [ reloadRankings, setReloadRankings ] = useState(0);\n\n  // Get current game rankings\n  useEffect(() => {\n    getGameRankings(gameId).then(entries => {\n        if (entries)\n          setRankings(entries);\n        else setRankings([]);\n    })\n  }, [wallet, gameId, reloadRankings, setRankings]);\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Home wallet={wallet}/>}/>\n        <Route path=\"/play\" \n          element={<Game wallet={wallet} gameId={gameId} rankings={rankings} setRankings={setRankings} reloadRankings={reloadRankings} setReloadRankings={setReloadRankings}/>}\n        />\n      </Routes>\n    </>\n  );\n}\n\nconst AppWithProvider = () => {\n  const network = WalletAdapterNetwork.Mainnet;\n  const endpoint = clusterApiUrl(network);\n\n  const walletOptions = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet(),\n    getTorusWallet({\n      options: { clientId: 'Get a client ID @ https://developer.tor.us' }\n  }),\n    getLedgerWallet(),\n    getSolletWallet({ network }),\n    getSolletExtensionWallet({ network }),\n  ], [network]);\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={walletOptions}>\n          <BrowserRouter>\n            <App/>\n          </BrowserRouter>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n}\n\nexport default AppWithProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport AppWithProvider from './App';\n\nReactDOM.render(\n  <AppWithProvider />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__nD2-Z\",\"ProfileMain\":\"Profile_ProfileMain__18I6y\",\"ProfileInner\":\"Profile_ProfileInner__risdd\",\"ProfileBlock\":\"Profile_ProfileBlock__1_2dO Profile_Profile__nD2-Z\",\"ProfileNone\":\"Profile_ProfileNone__ePzbk Profile_Profile__nD2-Z\",\"History\":\"Profile_History__3oShl\",\"HistoryEntry\":\"Profile_HistoryEntry__3jN5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeaderboardContainer\":\"Leaderboard_LeaderboardContainer__DjWNe\",\"Leaderboard\":\"Leaderboard_Leaderboard__1JspY\",\"BoldRank\":\"Leaderboard_BoldRank__2L6LA\",\"RulesButton\":\"Leaderboard_RulesButton__2pujK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rules\":\"Rules_Rules__24oWh\",\"RulesMain\":\"Rules_RulesMain___9aKG\",\"RulesInner\":\"Rules_RulesInner__1ZpXD\",\"RulesBlock\":\"Rules_RulesBlock__sU4FC Rules_Rules__24oWh\",\"RulesNone\":\"Rules_RulesNone__2rXF0 Rules_Rules__24oWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__1qzE8\",\"Content\":\"Game_Content__2W_3p\",\"GameArea\":\"Game_GameArea__38dyN\",\"Rankings\":\"Game_Rankings__1yrWx\"};"],"sourceRoot":""}