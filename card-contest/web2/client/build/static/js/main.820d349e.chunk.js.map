{"version":3,"sources":["css/Header.module.css","css/Home.module.css","css/Leaderboard.module.css","css/Dashboard.module.css","api/games.js","api/users.js","components/Header.js","pages/Home/Home.js","pages/Game/Dashboard.js","pages/Game/Leaderboard.js","pages/Game/Profile.js","pages/Game/Game.js","App.js","index.js","css/Profile.module.css","css/Game.module.css"],"names":["module","exports","getGameRankings","gameId","a","axios","get","res","data","entries","playGame","pubkey","post","gameType","substring","user","userLogin","headers","getRecentGames","Header","props","onProfileClick","buttonWidth","className","styles","HeaderGame","HeaderHome","style","minWidth","ProfileButton","onClick","width","display","require","Home","wallet","useState","isLoggedIn","setIsLoggedIn","useEffect","publicKey","toString","to","Content","Or","href","faceRankings","maxEntries","process","MAX_ENTRIES","Dashboard","rank","setRank","rankings","setRankings","reloadRankings","setReloadRankings","acesCards","setAcesCards","wildCards","setWildCards","bestHand","setBestHand","setEntries","aces","i","map","entry","indexOf","count","length","playAgainButton","setPlayAgainButton","createEntry","then","r","e","DashContainer","Play","handType","toUpperCase","slice","replace","Hand","hand","sort","b","face","card","image","src","alt","suit","Replay","Stats","disabled","Cards","CardGrid","Headline","Card","Leaderboard","rankingsToShow","setRankingsToShow","Math","min","concat","match","LeaderboardContainer","Number","BoldRank","Profile","isProfileOpen","setIsProfileOpen","recentGames","setRecentGames","history","ProfileBlock","ProfileNone","ProfileMain","ProfileInner","overflow","textOverflow","maxWidth","games","History","HistoryEntry","String","padStart","ranks","totals","Game","GameArea","Rankings","App","useWallet","now","Date","utc","getTime","getTimezoneOffset","getDate","path","element","AppWithProvider","network","WalletAdapterNetwork","Mainnet","endpoint","clusterApiUrl","walletOptions","useMemo","getPhantomWallet","getSlopeWallet","getSolflareWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","wallets","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.820d349e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__RWSel\",\"HeaderHome\":\"Header_HeaderHome__4fkBX Header_Header__RWSel\",\"HeaderGame\":\"Header_HeaderGame__20foV Header_Header__RWSel\",\"ProfileButton\":\"Header_ProfileButton__77GX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1aUBM\",\"Content\":\"Home_Content__2ue8L\",\"Or\":\"Home_Or__1IcPt\",\"wallet-adapter-button\":\"Home_wallet-adapter-button__S-GGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeaderboardContainer\":\"Leaderboard_LeaderboardContainer__DjWNe\",\"Leaderboard\":\"Leaderboard_Leaderboard__1JspY\",\"BoldRank\":\"Leaderboard_BoldRank__2L6LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashContainer\":\"Dashboard_DashContainer__G4W5n\",\"Dashboard\":\"Dashboard_Dashboard__1uK3T\",\"Play\":\"Dashboard_Play__1d_2z\",\"Replay\":\"Dashboard_Replay__2R53y\",\"Hand\":\"Dashboard_Hand__17d2t\",\"Cards\":\"Dashboard_Cards__2XYZz\",\"CardGrid\":\"Dashboard_CardGrid__2Vfkb\",\"Headline\":\"Dashboard_Headline__3lSWr\",\"Card\":\"Dashboard_Card__2tCQ2\",\"Stats\":\"Dashboard_Stats__1e_pm\"};","import axios from 'axios';\n\nexport const getGameRankings = async (gameId) => {\n    let res = await axios.get(`/games/${gameId}`);\n    return res.data.entries;\n}\n\nexport const playGame = async (pubkey, gameId) => {\n    let res = await axios.post(`/games/play/${gameId}`, { gameType: gameId.substring(8), user: pubkey });\n    return res.data;\n}\n","import axios from 'axios';\n\nexport const userLogin = async (pubkey) => {\n    let res = await axios.post(`/users/login`, { user: pubkey }, { headers: { 'Content-Type': 'application/json' } });\n    return res.data;\n}\n\nexport const getRecentGames = async (pubkey) => {\n    let res = await axios.get(`/users/history/${pubkey}`);\n    return res.data;\n}\n\nexport const getGameEntry = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/history/${pubkey}-${gameId}`);\n    return res.data;\n}\n\nexport const getAvailableCards = async (pubkey, gameId) => {\n    let res = await axios.get(`/users/cards/${pubkey}-${gameId}`);\n    return { availableCards: res.data.cards };\n}","import React from 'react';\n\nimport styles from '../css/Header.module.css';\n\nconst Header = (props) => {\n    const user = props.user;\n    const onProfileClick = props.onProfileClick;\n    let buttonWidth = \"184px\";\n\n    return (\n        <div className={user ? styles.HeaderGame : styles.HeaderHome}>\n            <div style={ { minWidth: buttonWidth } }>\n                <p>The <b>ACES</b></p>\n            </div>\n            <p>The <b>ACES Contest</b></p>\n            <div style={ { minWidth: buttonWidth } }>\n                <button className={styles.ProfileButton} onClick={onProfileClick} style={ user ? { width: buttonWidth } : { display: \"none\" } }>PROFILE</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { WalletMultiButton, WalletModalProvider } from '@solana/wallet-adapter-react-ui';\n\nimport { userLogin } from '../../api/users';\n\nimport Header from '../../components/Header';\n\nimport styles from '../../css/Home.module.css';\n\n// Wallet Multi-Button styling\nrequire('@solana/wallet-adapter-react-ui/styles.css');\nrequire('../../css/main.css');\n\nconst Home = (props) => {\n    const wallet = props.wallet;\n    \n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    // Go to '/play' when logged in\n    useEffect(() => {\n        if (wallet.publicKey) {\n            userLogin(wallet.publicKey.toString());\n            setIsLoggedIn(true);\n        } \n    \n    }, [wallet]);\n\n    return isLoggedIn ? (\n            <Navigate to=\"/play\"/>\n        ) : (\n        <div className={styles.Home}>\n            <Header user={false} onProfileClick={() => {}}/>\n                <div className={styles.Content}>\n                    <WalletModalProvider>\n                        <WalletMultiButton>PLAY</WalletMultiButton>\n                    </WalletModalProvider>\n                    <div className={styles.Or}>\n                        <div></div><hr/>\n                        <p>Or</p>\n                        <hr/>\n                    </div>\n                    <a href=\"https://www.magiceden.io/marketplace/the_aces_nft\">BUY</a>\n                    <p>In Order to Play the Game You Must Hold At Least 1 Aces NFT</p>\n                    <p>This version is in <b>Beta Mode</b></p>\n                </div>\n        </div>\n    )\n}\n\nexport default Home;","import { useState, useEffect } from 'react';\n\nimport { playGame, getGameRankings } from '../../api/games';\n\nimport styles from '../../css/Dashboard.module.css';\n\nconst faceRankings = [ \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst maxEntries = process.env.MAX_ENTRIES || 15;\n\nconst Dashboard = (props) => {\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const rank = props.rank;\n    const setRank = props.setRank;\n    const rankings = props.rankings;\n    const setRankings = props.setRankings;\n    const reloadRankings = props.reloadRankings;\n    const setReloadRankings = props.setReloadRankings;\n    const [ acesCards, setAcesCards ] = useState([]);\n    const [ wildCards, setWildCards ] = useState([]);\n    const [ bestHand, setBestHand ] = useState();\n    const [ entries, setEntries ] = useState(20);\n\n    // Get available cards\n    useEffect(() => {\n        if (bestHand && reloadRankings === 0) {\n            setAcesCards(bestHand.aces ? bestHand.aces : []);\n            setWildCards(bestHand.wildCards);\n        }\n\n    }, [wallet, gameId, bestHand, reloadRankings, setAcesCards, setWildCards]);\n\n    // Get best hand from rankings\n    useEffect(() => {\n        if (rankings) {\n            let i = rankings.map(entry => entry.user).indexOf(wallet);\n            if (i !== -1) setBestHand(rankings[i]);\n\n            // Get num of entries at login\n            let count = 0;\n            for (let i = 0; i < rankings.length; i++) {\n                if (rankings[i].user === wallet) { \n                    count += 1;\n                }\n            }\n            setEntries(count);\n        }\n\n    }, [wallet, rankings, setEntries]);\n\n    const [ playAgainButton, setPlayAgainButton ] = useState(\"PLAY AGAIN\");\n\n    // Create a game entry request\n    const createEntry = () => {\n        setPlayAgainButton(\"Thinking...\");\n        playGame(wallet, gameId).then(entry => {\n            if (entry && entry !== {}) {\n                setAcesCards(entry.aces);\n                setWildCards(entry.wildCards);\n                if (wallet) {\n                    getGameRankings(gameId).then(entries => {\n                        setRankings(entries);\n                        if (entries) {\n                            let r = entries.map(e => e.user).indexOf(wallet);\n                            setRank(r === -1 ? \"?\" : r + 1);\n                            if (r !== -1) setBestHand(entries[r]); \n                        }\n                    })\n                }\n                setReloadRankings(reloadRankings + 1);\n                setPlayAgainButton(\"PLAY AGAIN\");\n            }\n        })\n    };\n\n    return (\n        <div className={styles.DashContainer}>\n            <div className={styles.Dashboard}>\n                <div className={styles.Play}>\n                    {\n                        bestHand ? (\n                            !bestHand.handType ? (\n                                <>\n                                    <p>Need at least 1 Aces NFT to play the card contest.</p>\n                                    <button onClick={() => createEntry()} disabled={rankings === false}>PLAY</button>\n                                    <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                                </>\n                            ) : (\n                                <>\n                                    <p>{`${(bestHand.handType[0].toUpperCase() + bestHand.handType.slice(1)).replace(\"-\", \" \")}`}</p>\n                                    <div className={styles.Hand}>\n                                        {\n                                            bestHand.hand\n                                                .sort((a, b) => \n                                                    (faceRankings.indexOf(b.face.length === 1 ? b.face : b.face[0].toUpperCase()) - faceRankings.indexOf(a.face.length === 1 ? a.face : a.face[0].toUpperCase())))\n                                                .map( (card, i) => \n                                                <div key={i} >\n                                                    {\n                                                        card.image ? (\n                                                            <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                                        ) : (\n                                                            <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                                                        )\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <div className={styles.Replay}>\n                                        <div className={styles.Stats}>\n                                            <p><b>Rank: </b>{rankings ? `${rank}/${rankings.length}` : ``}</p>\n                                            <p><b>Entries: </b>{`${entries}/${maxEntries}`}</p>\n                                        </div>\n                                        <button onClick={() => createEntry()} \n                                            disabled={(entries && entries >= maxEntries) || playAgainButton !== \"PLAY AGAIN\" ? true : false}>\n                                                {playAgainButton}\n                                        </button>\n                                    </div>\n                                </>\n                            )\n                        ) : (\n                            <>\n                                <p>Best Hand</p>\n                                <button onClick={() => createEntry()}>PLAY</button>\n                                <p>{rankings ? `Rank: ${rank}/${rankings.length}` : `Rank`}</p>\n                            </>\n                        )\n                    }\n                </div>\n                <hr/>\n                <div className={styles.Cards}>\n                    <div className={styles.CardGrid}>\n                        <div className={styles.Headline}>\n                            <p>Table Cards</p>\n                        </div>\n                    {\n                        wildCards.map( (card, i) => \n                            <div key={i} className={styles.Card}>\n                                <img src={`/images/wildCards/${card.face}${card.suit}.png`} alt={card.face + \" of \" + card.suit}/>\n                            </div>\n                        )\n                    }\n                        <div className={styles.Headline}>\n                            <p>ACES</p>\n                        </div>\n                    {\n                        (acesCards && acesCards.length > 0) ? (acesCards\n                            .map( (card, i) => \n                                <div key={i} className={styles.Card}>\n                                    <img src={card.image} alt={card.face + \" of \" + card.suit}/>\n                                </div>\n                        )) : (\n                            <></>\n                            )\n                    }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import { useState, useEffect } from 'react';\n\nimport styles from '../../css/Leaderboard.module.css';\n\nconst Leaderboard = (props) => {\n    const rankings = props.rankings;\n    const rank = props.rank;\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const gameType = gameId.substring(8) === \"deuceswild\" ? \"Deuces Wild\" : \"Five Card Poker\"\n\n    // Calculate which hands should be shown (edge cases toward front or back of rankings)\n    const [ rankingsToShow, setRankingsToShow ] = useState();\n\n    useEffect(() => {\n        if (rankings) {\n            let res;\n            if (rank <= 5 || rank === \"?\") res = rankings.slice(0,Math.min(10, rankings.length));\n            else if (rank > rankings.length - 5) res = rankings.slice(rankings.length - Math.min(10, rankings.length), rankings.length);\n            else res = rankings.slice(rank - Math.min(5, rankings.length / 2), rank).concat(rankings.slice(rank, rank + Math.min(5, rankings.length / 2)));\n            res = res.map(r => ({ rank: 0, user: r.user }) );\n\n            // Find user's entry and match with rank\n            let match = -1;\n            for (let i = 0; i < res.length; i++) {\n                if (res[i].user === wallet) {\n                    match = i; \n                    break;\n                }\n\n            }\n\n            if (match === -1) setRankingsToShow(rankings.slice(0, Math.min(10, rankings.length)).map((entry, i) => ({rank: i + 1, user: entry.user})));\n            else {\n                for (let i = 0; i < res.length; i++) {\n                    if (match !== i) res[i].rank = rank + i - match;\n                    else res[i].rank = rank;\n                }\n                setRankingsToShow(res);\n            }\n        }\n    }, [rankings, rank, wallet, setRankingsToShow]);\n\n    return (\n        <div className={styles.LeaderboardContainer}>\n            <div className={styles.Leaderboard}>\n                <h1>Leaderboard: {gameType}</h1>\n                <hr/>\n                <ul>\n                    \n                    {\n                        rankingsToShow ? (\n                            rankingsToShow.map( (entry, i) => \n                            <li className={Number(entry.rank) === Number(rank) ? styles.BoldRank : \"\"} key={i} >\n                                {`#${entry.rank}: ` + entry.user}\n                            </li>\n                            )\n                        ) : (\n                            <></>\n                        )\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard;","import { useState, useEffect } from 'react';\n\nimport { getRecentGames } from '../../api/users';\n\nimport styles from '../../css/Profile.module.css';\n\nconst Profile = (props) => {\n    const wallet = props.wallet;\n    const isProfileOpen = props.isProfileOpen;\n    const setIsProfileOpen = props.setIsProfileOpen;\n\n    const [ recentGames, setRecentGames ] = useState();\n\n    useEffect(() => {\n        getRecentGames(wallet).then(history => {\n            setRecentGames(history);\n        })\n    }, [wallet, setRecentGames]);\n\n    return (\n        <div className={isProfileOpen ? styles.ProfileBlock : styles.ProfileNone}>\n            <div className={styles.ProfileMain}>\n                <button onClick={() => setIsProfileOpen(false)}/>\n                <div className={styles.ProfileInner}>\n                    <div>\n                        <p>Wallet ID</p>\n                        <p style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: \"50%\" }}>{wallet}</p>\n                    </div>\n                    <div>\n                        <p>Games played:</p>\n                        <p>{recentGames?.games ? recentGames.games.length : \"0\"}</p>\n                    </div>\n                    <div>\n                        <p>Coin balance:</p>\n                        <p>Coming soon!</p>\n                    </div>\n                    <div>\n                        <p>Contest history:</p>\n                        <div className={styles.History}>\n                        {\n                            recentGames?.games ? (\n                                recentGames.games.slice(0,5).map( (gameId, i) => \n                                    gameId.substring(0,8) !== \"testtest\" ? (\n                                        <div key={i} className={styles.HistoryEntry}>\n                                            {`${gameId.substring(8) === \"deuceswild\" ? \"2's Wild \" : \"5 Card \"}${String(Number(gameId.substring(2,4)) + 1).padStart(2, '0')}/${gameId.substring(0,2)} - Rank ${recentGames.ranks[i]}/${recentGames.totals[i]}`}\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )\n                                )\n                            ) : (\n                                <p>Play your first game!</p>\n                            )\n                        }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Dashboard from './Dashboard';\nimport Leaderboard from './Leaderboard';\nimport Profile from './Profile';\n\nimport { getGameRankings } from '../../api/games';\n\nimport styles from '../../css/Game.module.css';\n\nconst Game = (props) => {\n    const wallet = props.wallet;\n    const gameId = props.gameId;\n    const rankings = props.rankings;\n    const setRankings = props.setRankings;\n    const reloadRankings = props.reloadRankings;\n    const setReloadRankings = props.setReloadRankings;\n\n    const [ isProfileOpen, setIsProfileOpen ] = useState(false);\n    const [ rank, setRank ] = useState(\"?\");\n\n    // Get current game rankings and find rank\n    useEffect(() => {\n        if (wallet?.publicKey) {\n            if (rankings) {\n                let r = rankings.map(entry => entry.user).indexOf(wallet.publicKey.toString());\n                setRank(r === -1 ? \"?\" : r + 1);\n            }\n            else {\n                setRank(\"?\");\n            }\n        }\n    }, [wallet, gameId, rankings, setRank]);\n\n    return wallet.publicKey ? (\n        <div className={styles.Game}>\n            <p><b>BETA</b></p>\n            <div className={styles.Content}>\n                <div className={styles.GameArea}>\n                    <Header user={true} onProfileClick={() => setIsProfileOpen(true)}/>\n                    <Dashboard \n                        wallet={wallet.publicKey.toString()} \n                        gameId={gameId} \n                        rankings={rankings} \n                        rank={rank} \n                        reloadRankings={reloadRankings}\n                        setRankings={setRankings} \n                        setRank={setRank}\n                        setReloadRankings={setReloadRankings}\n                    />\n                </div>\n                <div className={styles.Rankings}>\n                    <Leaderboard wallet={wallet.publicKey.toString()} gameId={gameId} rankings={rankings} rank={rank}/>\n                </div>\n            </div>\n            <Profile wallet={wallet.publicKey.toString()} isProfileOpen={isProfileOpen} setIsProfileOpen={setIsProfileOpen}/>\n        </div>\n    ) : (\n        <Navigate to=\"/\"/>\n    )\n    ;\n}\n\nexport default Game;","// React, react-router, and react-bootstrap imports\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\n\n// Solana-specific imports\nimport { clusterApiUrl } from '@solana/web3.js';\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\n\nimport { getGameRankings } from './api/games';\n\n// Pages\nimport Home from './pages/Home/Home';\nimport Game from './pages/Game/Game';\n\nconst App = () => {\n  const wallet = useWallet();\n\n  const now = new Date();\n  const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000);\n  const gameType = [ \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\" ].indexOf(String(utc.getDate()).padStart(2, '0')) !== -1 ? \"deuceswild\" : \"5card\";\n  //const gameType = \"deuceswild\";\n  //const gameId = String(utc.getDate()).padStart(2,'0') + String(utc.getMonth()).padStart(2,'0') + String(utc.getFullYear()) + gameType;\n  const gameId = \"thisisit\" + gameType;\n\n  const [ rankings, setRankings ] = useState(false);\n  const [ reloadRankings, setReloadRankings ] = useState(0);\n\n  // Get current game rankings\n  useEffect(() => {\n    getGameRankings(gameId).then(entries => {\n        if (entries)\n          setRankings(entries);\n        else setRankings([]);\n    })\n  }, [wallet, gameId, reloadRankings, setRankings]);\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Home wallet={wallet}/>}/>\n        <Route path=\"/play\" \n          element={<Game wallet={wallet} gameId={gameId} rankings={rankings} setRankings={setRankings} reloadRankings={reloadRankings} setReloadRankings={setReloadRankings}/>}\n        />\n      </Routes>\n    </>\n  );\n}\n\nconst AppWithProvider = () => {\n  const network = WalletAdapterNetwork.Mainnet;\n  const endpoint = clusterApiUrl(network);\n\n  const walletOptions = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet(),\n    getTorusWallet({\n      options: { clientId: 'Get a client ID @ https://developer.tor.us' }\n  }),\n    getLedgerWallet(),\n    getSolletWallet({ network }),\n    getSolletExtensionWallet({ network }),\n  ], [network]);\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={walletOptions}>\n          <BrowserRouter>\n            <App/>\n          </BrowserRouter>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n}\n\nexport default AppWithProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport AppWithProvider from './App';\n\nReactDOM.render(\n  <AppWithProvider />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__nD2-Z\",\"ProfileMain\":\"Profile_ProfileMain__18I6y\",\"ProfileInner\":\"Profile_ProfileInner__risdd\",\"ProfileBlock\":\"Profile_ProfileBlock__1_2dO Profile_Profile__nD2-Z\",\"ProfileNone\":\"Profile_ProfileNone__ePzbk Profile_Profile__nD2-Z\",\"History\":\"Profile_History__3oShl\",\"HistoryEntry\":\"Profile_HistoryEntry__3jN5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__1qzE8\",\"Content\":\"Game_Content__2W_3p\",\"GameArea\":\"Game_GameArea__38dyN\",\"Rankings\":\"Game_Rankings__1yrWx\"};"],"sourceRoot":""}